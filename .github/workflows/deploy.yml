#1
# https://github.com/actions/starter-workflows/blob/main/pages/static.yml
# https://github.com/tschaub/gh-pages
# https://maxschmitt.me/posts/github-actions-ssh-key
# https://github.com/webfactory/ssh-agent
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ main ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
      - name: Set up SSH
        # note: the printf here will insert a newline at the end of the deploy key, do NOT have one in the key in github.
        run: |
                  mkdir -p ~/.ssh
                  ssh-keyscan github.com >> ~/.ssh/known_hosts                  
                  printf "%s" "${ACTIONS_DEPLOY_KEY}" > ~/.ssh/github_actions   
                  chmod 600 ~/.ssh/github_actions
                  ssh-keygen -l -f ~/.ssh/github_actions || echo "Invalid private key"
                  eval "$(ssh-agent -s)"
                  ssh-add ~/.ssh/github_actions
        shell: bash
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          # to create your key:
          #   ssh-keygen -t ed25519 -a 100 -f path/to/keyfile
          # make sure no passphrase, can't get prompted in github secret
          # if you need older rsa method for older servers:
          #   ssh-keygen -t rsa -b 4096 -o -f path/to/keyfile
          # on the source repo: add the file contents without an extension to ACTIONS_DEPLOY_KEY secrets
          #   repo -> settings -> environments -> github-pages -> Environment secrets -> add ACTIONS_DEPLOY_KEY secret -> paste in contents
          # for this specific code, make sure there is NO trailing newline at the end of the key when you paste it in. You need one, but we will insert it in the command above as it often fails otherwise.
          # on the destination repo: add the file contents of the .pub file to deploy keys
          #   repo -> settings -> Security header -> Deploy keys -> Add deploy key -> check write access
          # make sure both files use linux LF characters, not windows ones.
          # if you have a copy paste / clipboard utility or some other program it may mangle the contents.
          #
          # do you need it in pem format? make a backup of your key first
          #   ssh-keygen -p -f path/to/your/key -m pem
          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
      - name: Deploy to GitHub Pages
        id: deployment
        run: |
          git remote set-url origin git@github.com/test-ghpages-deploy/test-ghpages-deploy.github.io.git
          git config --global user.email "support+actions@github.com"
          git config --global user.name "github-actions-bot"
          NODE_DEBUG=gh-pages npx gh-pages --dist build --branch main
        shell: bash
        if: ${{ github.ref == 'refs/heads/main' }} # only deploy main
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          
